{
    "name": "getargv-gh-pages",
    "homepage": "https://getargv.narzt.cam",
    "repository": {
        "type": "git",
        "url": "https://github.com/CamJN/getargv.git"
    },
    "funding": {
        "type": "github",
        "url": "https://github.com/CamJN"
    },
    "version": "0.11.1",
    "description": "Marketing site for getargv",
    "main": "build.mjs",
    "scripts": {
        "prestart": "npm run html",
        "start": "(trap 'kill 0' SIGINT; sass --watch assets/sass/main.scss assets/css/main.css & node watch.mjs & tsc --watch & /usr/bin/python3 -m http.server 0)",
        "build": "npm run js && npm run css && npm run html && npm run mandoc1 && npm run mandoc3",
        "postbuild": "mkdir -p docs",
        "css": "sass --style compressed assets/sass/main.scss:assets/css/main.css assets/sass/noscript.scss:assets/css/noscript.css assets/sass/mandoc.scss:assets/css/mandoc.css",
        "prejs": "rm -f assets/js/* && tsc",
        "js": "for file in assets/js/*.js; do uglifyjs  --compress --mangle  --source-map \"url='/${file/.js/.min.js}.map',content='${file}.map',filename='${file/.js/.min.js}.map'\" --output \"${file/.js/.min.js}\" -- \"$file\"; done",
        "prehtml": "npm run stats && npm run projects && npm run license && npm run changelog",
        "html": "for file in *-body.html; do node build.mjs \"$file\" > ${file%-body.html}.html ; done",
        "prechangelog": "echo '<pre class=\"changelog\">' > changelog-body.html",
        "changelog": "git log master --oneline | awk '{a=$1;$1=\"\";print \"<a href=\\\"https://github.com/CamJN/getargv/commit/\"a\"\\\">\"a\"</a>\"$0}' >> changelog-body.html",
        "postchangelog": "echo '</pre>' >> changelog-body.html",
        "projects": "fgrep '<li>' hallofshame-body.html | wc -l > projects.html",
        "stats": "printf 'scale=3; %d / %d\\n' `git show master:test/src/unit_tests.c master:test/src/unit_tests.h master:test/src/common_unit_test.c master:test/src/common_unit_test.h | wc -l` `git show master:src/getargv.c master:src/getargv.h | wc -l` | /usr/bin/bc > stats.html",
        "premandoc1": "npm run css",
        "mandoc1": "git show master:man/getargv.1 | mandoc -T html -O 'style=mandoc.css,man=x-man-page://%S/%N' > man1.html",
        "postmandoc1": "/usr/bin/curl -sSL https://mandoc.bsd.lv/snapshots/mandoc.tar.gz | /usr/bin/tar -x --strip-components=1 --include='*mandoc.css' --to-stdout --file - | cat - assets/css/mandoc.css > mandoc.css",
        "postmandoc3": "npm run postmandoc1",
        "mandoc3": "git show master:man/libgetargv.3 | mandoc -T html -O 'style=mandoc.css,man=x-man-page://%S/%N' > man3.html",
        "prelicense": "echo '<pre>' > license-body.html",
        "license": "git show master:LICENSE | sed -e 's/</\\&lt;/g' -e 's/>/\\&gt;/g' >> license-body.html",
        "postlicense": "echo '</pre>' >> license-body.html",
        "presitemap": "echo \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"sitemap.xsl\\\" ?>\\n<urlset xmlns=\\\"http://www.sitemaps.org/schemas/sitemap/0.9\\\">\" > docs/sitemap.xml",
        "sitemap": "find docs -name '*.html' \\! \\( -name index.html -o -path node_modules \\) | sed -Ee 's|docs/(.+)|<url><loc>https://getargv.narzt.cam/\\1</loc></url>|g' >> docs/sitemap.xml",
        "postsitemap": "echo '</urlset>' >> docs/sitemap.xml",
        "clean": "sed -e 's|^/||g' .gitignore | xargs rm -rf",
        "predeploy": "npm run build",
        "deploy": "find . -name '*.html' \\! \\( -path 'node_modules' -o -name '*-body.html' -o -name '*-sidebar.html' -o -name 'template.html' -o -name '*-blurb.html' \\) -depth 1 -exec fgrep -l '<html' {} \\; | xargs -J {} cp -r {} assets images mandoc.css sitemap.xsl docs && rm -rf docs/assets/sass docs/assets/ts docs/images/Full-Res $(find docs/assets/ -name '*.map' -o \\( -name '*.js' \\! -name '*.min.js' \\))",
        "postdeploy": "npm run sitemap",
        "prerelease": "npm version minor --no-git-tag-version",
        "release": "git commit --all --amend --no-edit",
        "postrelease": "echo \"web$(node -e 'console.log(require(process.env.npm_package_json).version);')\" | xargs -I {} git tag -s -m {} {}",
        "images": "awk '/: +\\( [^)]+px +\\),/{gsub(/px/,\"\");print $4}' assets/sass/main.scss | awk '{print int($0*0.60) \"\\n\" int($0*0.92) \"\\n\" $0}' | while read res; do for file in  images/Full-Res/*.{png,jpg} ; do sips --resampleWidth $res $file -o ${file%.*}.$res.${file##*.}; done ; done",
        "test": "echo \"Error: no test specified\" && exit 1"
    },
    "author": "Camden Narzt",
    "license": "SEE LICENSE IN LICENSE.txt",
    "dependencies": {
        "@tsconfig/recommended": "^1.0.1",
        "chokidar": "^3.5.3",
        "sass": "^1.49.8",
        "typescript": "^4.5.5",
        "uglify-js": "^3.15.1"
    }
}
